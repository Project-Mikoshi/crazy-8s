import React from 'react'
import { Container } from '@mui/material'
import { Card, CardSuit, CardValue } from '@/types/card'

interface CardDisplayProps {
  card: Card,
  disabled?: boolean,
  id?: number,
  onSelect?: (id: number) => void
}

export default function (props: CardDisplayProps) {
  // == Props ================================
  const { card, onSelect, id, disabled } = props

  // == States ===============================

  // == Computed Props =======================
  const { color, suit, value } = card
  const fillOpacity = 0.65

  // == Lifecycle ============================

  // == Functions ============================
  function generateShape () {
    if (suit === CardSuit.SPADES) {
      return (
        <g>
          <path
            stroke={color}
            fill={color}
            strokeWidth={1}
            d='M 177.1155,209.2 C 173.9155,204.4 169.7155,201.6 169.7155,197.6 C 169.7155,194 171.7155,193.2 172.9155,193.2 C 174.5155,193.2 175.7155,194 175.7155,196.8 C 175.7155,197.6 176.5155,197.6 176.5155,196.8 C 176.5155,192.8 175.7155,192.8 174.9155,190.8 L 179.3155,190.8 C 178.5155,192.8 177.7155,192.8 177.7155,196.8 C 177.7155,197.6 178.5155,197.6 178.5155,196.8 C 178.5155,193.6 179.7155,193.2 181.3155,193.2 C 182.5155,193.2 184.9155,194 184.9155,197.6 C 184.9155,201.65216 180.3155,204.4 177.1155,209.2 z '
          />

          <path
            stroke={color}
            fill={color}
            strokeWidth={1}
            d='M 21.1155,43.3 C 17.9155,48.1 13.7155,50.9 13.7155,54.9 C 13.7155,58.5 15.7155,59.3 16.9155,59.3 C 18.5155,59.3 19.7155,58.5 19.7155,55.7 C 19.7155,54.9 20.5155,54.9 20.5155,55.7 C 20.5155,59.7 19.7155,59.7 18.9155,61.7 L 23.3155,61.7 C 22.5155,59.7 21.7155,59.7 21.7155,55.7 C 21.7155,54.9 22.5155,54.9 22.5155,55.7 C 22.5155,58.9 23.7155,59.3 25.3155,59.3 C 26.5155,59.3 28.9155,58.5 28.9155,54.9 C 28.9155,50.84784 24.3155,48.1 21.1155,43.3 z '
          />

          <path
            stroke={color}
            fill={color}
            strokeWidth={1}
            d='M 98.499999,80.750001 C 82.500002,104.75 61.500002,118.75 61.500002,138.75 C 61.500002,156.75 71.500002,160.75 77.500002,160.75 C 85.500002,160.75 91.499999,156.75 91.499999,142.75 C 91.499999,138.75 95.499999,138.75 95.499999,142.75 C 95.499999,162.75 91.499999,162.75 87.500002,172.75 L 109.5,172.75 C 105.5,162.75 101.5,162.75 101.5,142.75 C 101.5,138.75 105.5,138.75 105.5,142.75 C 105.5,158.75 111.5,160.75 119.5,160.75 C 125.5,160.75 137.5,156.75 137.5,138.75 C 137.5,118.4892 114.5,104.75 98.499999,80.750001 z '
          />
        </g>
      )
    }

    if (suit === CardSuit.HEARTS) {
      return (
        <g>
          <path
            stroke={color}
            fill={color}
            strokeWidth={1}
            d='M 99.5,99.75 C 99.5,93.75 89.5,81.75 79.5,81.75 C 69.5,81.75 59.5,89.75 59.5,103.75 C 59.5,125.75 91.5,161.75 99.5,171.75 C 107.5,161.75 139.5,125.75 139.5,103.75 C 139.5,89.75 129.5,81.75 119.5,81.75 C 109.45012,81.75 99.5,93.75 99.5,99.75 z '
          />
          <path
            stroke={color}
            fill={color}
            strokeWidth={1}
            d='M 21.3155,47.1 C 21.3155,45.9 19.3155,43.5 17.3155,43.5 C 15.3155,43.5 13.3155,45.1 13.3155,47.9 C 13.3155,52.3 19.7155,59.5 21.3155,61.5 C 22.9155,59.5 29.3155,52.3 29.3155,47.9 C 29.3155,45.1 27.3155,43.5 25.3155,43.5 C 23.30552,43.5 21.3155,45.9 21.3155,47.1 z '
          />
          <path
            stroke={color}
            fill={color}
            strokeWidth={1}
            d='M 177.3155,205.4 C 177.3155,206.6 175.3155,209 173.3155,209 C 171.3155,209 169.3155,207.4 169.3155,204.6 C 169.3155,200.2 175.7155,193 177.3155,191 C 178.9155,193 185.3155,200.2 185.3155,204.6 C 185.3155,207.4 183.3155,209 181.3155,209 C 179.30552,209 177.3155,206.6 177.3155,205.4 z '
          />
        </g>
      )
    }

    if (suit === CardSuit.DIAMONDS) {
      return (
        <g>
          <path
            stroke={color}
            fill={color}
            strokeWidth={1}
            d='M 170.1155,199.8 L 177.3155,191 L 184.5155,199.4 L 177.3155,209 L 170.1155,199.8 z'
          />
          <path
            stroke={color}
            fill={color}
            strokeWidth={1}
            d='M 14.1155,52.3 L 21.3155,43.5 L 28.5155,51.9 L 21.3155,61.5 L 14.1155,52.3 z'
          />
          <path
            stroke={color}
            fill={color}
            strokeWidth={1}
            d='M 63.5,125.75 L 99.5,81.75 L 135.5,123.75 L 99.5,171.75 L 63.5,125.75 z'
          />
        </g>
      )
    }

    if (suit === CardSuit.CLUBS) {
      return (
        <g>
          <path
            stroke={color}
            fill={color}
            strokeWidth={1}
            d='M 175.5155,201.2 C 173.1155,202.4 171.9155,208.8 177.5155,208.8 C 183.1155,208.8 181.9155,202.4 179.5155,201.2 C 181.1155,202.4 186.3155,204 186.3155,198.4 C 186.3155,192.8 179.1155,193.2 178.7155,197.6 L 177.9155,197.6 C 177.9155,197.6 178.3155,193.2 179.5155,191.2 L 175.5155,191.2 C 176.7155,193.2 177.1155,197.6 177.1155,197.6 L 176.3155,197.6 C 175.9155,193.2 168.3155,192.8 168.3155,198.4 C 168.3155,203.2 173.9155,202.4 175.5155,201.2 z'
          />
          <path
            stroke={color}
            fill={color}
            strokeWidth={1}
            d='M 19.5155,51.3 C 17.1155,50.1 15.9155,43.7 21.5155,43.7 C 27.1155,43.7 25.9155,50.1 23.5155,51.3 C 25.1155,50.1 30.3155,48.5 30.3155,54.1 C 30.3155,59.7 23.1155,59.3 22.7155,54.9 L 21.9155,54.9 C 21.9155,54.9 22.3155,59.3 23.5155,61.3 L 19.5155,61.3 C 20.7155,59.3 21.1155,54.9 21.1155,54.9 L 20.3155,54.9 C 19.9155,59.3 12.3155,59.7 12.3155,54.1 C 12.3155,49.3 17.9155,50.1 19.5155,51.3 z'
          />
          <path
            stroke={color}
            fill={color}
            strokeWidth={1}
            d='M 90.5,120.75 C 78.5,114.75 72.5,82.75 100.5,82.75 C 128.5,82.75 122.5,114.75 110.5,120.75 C 118.5,114.75 144.5,106.75 144.5,134.75 C 144.5,162.75 108.5,160.75 106.5,138.75 L 102.5,138.75 C 102.5,138.75 104.5,160.75 110.5,170.75 L 90.5,170.75 C 96.5,160.75 98.5,138.75 98.5,138.75 L 94.5,138.75 C 92.5,160.75 54.5,162.75 54.5,134.75 C 54.5,110.75 82.5,114.75 90.5,120.75 z'
          />
        </g>
      )
    }
  }

  // == Actions ==============================
  function handleClick () {
    if (onSelect && id !== undefined) {
      onSelect(id)
    }
  }

  // == Template =============================
  return (
    <Container sx={{ height: '200px' }}>
      <svg className={`card-display-svg ${disabled ? 'disabled' : ''}`} viewBox='0 0 200 250' fillOpacity={fillOpacity} role='button' onClick={handleClick}>
        <g>
          <path
            fill='aliceblue'
            d='M 199,10 C 199,5 195,1 190,1 L 10,1 C 5,1 1,5 1,10 L 1,240 C 1,245 5,249 10,249 L 190,249 C 195,249 199,245 199,240 L 199,10 z '
          />

          <text x={value === CardValue.TEN ? 10 : 15} y={40} fill={color} stroke={color} fontSize={20}>
            {value}
          </text>
          <text x={value === CardValue.TEN ? -190 : -184} y={-213} transform='scale(-1,-1)' fill={color} stroke={color} fontSize={20}>
            {value}
          </text>

          {generateShape()}

        </g>
      </svg>
    </Container>
  )
}
